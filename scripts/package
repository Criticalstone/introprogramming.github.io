#!/usr/bin/env node

/*
  Package a folder with files as a .zip.

  By Johan Brook, 2014
*/

var zip = require('node-zip')(),
    Q = require('q'),
    fs = require('q-io/fs'),
    path = require('path'),
    partial = require('partial')


var addFileToFolder = function(folder, dir, file) {
  return fs.read(path.join(dir, file), 'b')
  .then(function(content) {
    return folder.file(file, content)
  })
}

var createArchive = function(dir) {
  var folder = zip.folder(dir),
      addFile = partial(addFileToFolder, folder, dir)

  return fs.list(dir)
  .then(function(files) {
    return Q.all(files.map(addFile))
  })
  .then(function(files) {
    var data = zip.generate({
      base64: false,
      compression: 'DEFLATE',
      type: 'nodebuffer'
    })

    return fs.write(path.basename(dir)+'.zip', data, 'wb').then(function() {
      return files
    })
  })
}


var init = function() {
  if(process.argv[2] === undefined) {
    console.log("Usage: node package <path/to/dir>")
    return process.exit(0)
  }

  var dir = process.argv[2]

  return createArchive(dir)
    .then(function(files) {
      console.log('Created '+dir+'.zip, with '+ files.length+' files.')
    })
    .catch(function(err) {
      console.error(err)
    })
}

// Detect if we're being called directly or require()'d

if(require.main === module) {
  init()
}
else {
  module.exports = createArchive
}
